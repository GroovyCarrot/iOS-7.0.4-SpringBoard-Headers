/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "SBAlert.h"

@class SBUnlockActionContext;

@interface SBLockScreenViewControllerBase : SBAlert
{
    id <SBLockScreenViewControllerDelegate> _delegate;
    SBUnlockActionContext *_customUnlockActionContext;
}

- (void)setDelegate:(id)fp8;
- (id)delegate;
- (id)allPendingAlertItems;
- (BOOL)hasSuperModalAlertItems;
- (id)currentAlertItem;
- (id)dequeueAllPendingSuperModalAlertItems;
- (void)deactivateAlertItem:(id)fp8;
- (BOOL)activateAlertItem:(id)fp8;
- (BOOL)wantsToHandleAlert:(id)fp8;
- (BOOL)handleExternalKeyDownEvent;
- (void)noteResetRestoreStateUpdated;
- (void)noteDeviceBlockedStatusUpdated;
- (BOOL)isLockScreenVisible;
- (BOOL)isShowingOverheatUI;
- (void)shakeSlideToUnlockTextWithCustomText:(id)fp8;
- (id)activationBlockAnimated:(SEL)fp4;
- (void)updateInterfaceIfNecessary;
- (void)setShowingMediaControls:(BOOL)fp8;
- (BOOL)isShowingMediaControls;
- (void)updateOrientationForUndim;
- (BOOL)lockScreenBulletinControllerIsActive;
- (void)setCustomUnlockActionContext:(id)fp8;
- (id)_customUnlockActionContext;
- (id)currentUnlockActionContext;
- (BOOL)lockScreenIsShowingBulletins;
- (BOOL)shouldShowLockStatusBarTime;
- (BOOL)shouldShowSlideshowButton;
- (BOOL)handleMenuButtonHeld;
- (BOOL)handleMenuButtonTap;
- (void)noteExitingLostMode;
- (void)prepareToEnterLostMode;
- (void)updateCardItem:(id)fp8;
- (void)deactivateCardItem:(id)fp8;
- (void)activateCardItem:(id)fp8 animated:(BOOL)fp12;
- (struct CGRect)defaultContentRegionForPluginController:(id)fp8 withOrientation:(int)fp12;
- (void)disableLockScreenBundleWithName:(id)fp8 deactivationContext:(id)fp12;
- (void)enableLockScreenBundleWithName:(id)fp8 activationContext:(id)fp12;
- (id)activeLockScreenPluginController;
- (BOOL)isLockScreenPluginViewVisible;
- (BOOL)hasActiveUIAccessories;
- (void)setInScreenOffMode:(BOOL)fp8;
- (BOOL)isInScreenOffMode;
- (void)startLockScreenFadeInAnimationForSource:(int)fp8;
- (BOOL)canRelockForAutoDimTimer;
- (BOOL)wantsScreenToAutoDim;
- (void)prepareForMesaUnlockWithCompletion:(id)fp(null);
- (void)biometricEventMonitor:(id)fp8 handleBiometricEvent:(unsigned int)fp12;
- (BOOL)isHidingPasscodeViewDuringCall;
- (void)setForcesPasscodeViewDuringCall:(BOOL)fp8;
- (void)prepareToReturnToCameraFromCall;
- (void)cancelReturnToCameraAfterCall;
- (BOOL)shouldReturnToCameraAfterCall;
- (void)handlePhoneAppExitedIfNecessary;
- (void)noteStartingPhoneCallWhileUILocked;
- (BOOL)isMakingEmergencyCall;
- (void)emergencyDialerExitedWithError:(id)fp8;
- (void)exitEmergencyDialerAnimated:(BOOL)fp8;
- (void)launchEmergencyDialer;
- (void)dismissCameraImmediately;
- (void)activateCameraAnimated:(BOOL)fp8;
- (void)activateCamera;
- (BOOL)cameraIsVisible;
- (BOOL)cameraIsActive;
- (BOOL)_isLockAlert;
- (void)prepareForExternalUIUnlock;
- (void)deactivate;
- (void)activate;
- (BOOL)_wantsToAnimateFromPasscodeLockOnFailedPasscodeAttemptAndBlocked;
- (void)finishUIUnlockFromSource:(int)fp8;
- (void)attemptToUnlockUIFromNotification;
- (BOOL)canBeDeactivatedForUIUnlockFromSource:(int)fp8;
- (void)prepareForUIUnlock;
- (BOOL)wantsPasscodeLockForUIUnlockFromSource:(int)fp8 withOptions:(id)fp12;
- (BOOL)isPasscodeLockVisible;
- (void)setPasscodeLockVisible:(BOOL)fp8 animated:(BOOL)fp12 withUnlockSource:(int)fp16 andOptions:(id)fp20;
- (void)setPasscodeLockVisible:(BOOL)fp8 animated:(BOOL)fp12 completion:(id)fp(null);
- (void)setPasscodeLockVisible:(BOOL)fp8 animated:(BOOL)fp12;
- (BOOL)allowSystemGestureAtLocation:(struct CGPoint)fp8;
- (void)_transitionWallpaperFromLockWithOptionalOutTimingFunction:(id)fp8 adjustWindowLevel:(BOOL)fp12;
- (void)_transitionWallpaperFromLock;
- (void)viewWillDisappear:(BOOL)fp8;
- (void)viewWillAppear:(BOOL)fp8;

@end

